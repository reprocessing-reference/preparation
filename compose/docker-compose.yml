version: '3.8'

services:
  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "reprobaseline"
      POSTGRES_PASSWORD: "**reprobaseline**"
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - proxynet
    volumes:
      - /var/postgresql/data:/var/lib/postgresql/data

  database_auxip:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "auxip"
      POSTGRES_PASSWORD: "**auxip**"
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - proxynet
    volumes:
      - /var/postgresql/data_auxip:/var/lib/postgresql/data

  database_auxip_olingo:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "auxip"
      POSTGRES_PASSWORD: "**auxip**"
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - proxynet
    volumes:
      - /var/postgresql/data_auxip_olingo:/var/lib/postgresql/data

  pgadmin4:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "user@domain.com"
      PGADMIN_DEFAULT_PASSWORD: "**reprobaseline**"
    depends_on:
     - database
    networks:
      - proxynet
      
  reprobase:
    image: reprobaseline:1.0
    restart: "no"
    depends_on:
      - database
    networks:
      - proxynet

  auxip:
    image: auxip:1.0-SNAPSHOT
    restart: "no"
    depends_on:
      - database_auxip
    networks:
      - proxynet

  auxip_olingo:
    image: auxip_olingo:1.0.1
    restart: "no"
    depends_on:
      - database_auxip_olingo
    networks:
      - proxynet


  proxy:
    image: nginx:1.19.5-alpine
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - proxynet
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - /auxip_snapshot:/etc/nginx/html/archives
    depends_on:
      - pgadmin4
      - reprobase
      - auxip
      - auxip_olingo

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

networks:
  proxynet:
       driver: bridge

